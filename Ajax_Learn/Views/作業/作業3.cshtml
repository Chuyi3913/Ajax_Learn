
@{
    ViewData["Title"] = "作業3";
}

<h1>作業3</h1>
<select id="select1" class="form-select form-select-lg mb-3"></select>
<select id="select2" class="form-select form-select-lg mb-3"></select>
<select id="select3" class="form-select form-select-lg mb-3"></select>


@section Scripts{
    <script>
          const cities=document.querySelector('#select1');
          const sites=document.querySelector('#select2');
          const roads=document.querySelector('#select3');

         cities.addEventListener('change', changecity)
         sites.addEventListener('change', changesite);
          //因為asyncFun會重新載入三個選項，如果把change事件繫結asyncFun的話會因為重新載入的關係
          //而無法選擇，需要為了change事件而生成下面兩個function
          async function changecity(){
              await asyncSite();
              await asyncRoad();
          };
         async function changesite() {        
            await asyncRoad();
         };

          asyncFun();    

          //改用async await語法
          async function asyncFun(){ 
              await asyncCity();    
              await asyncSite();
              await asyncRoad();
          }

          //以下為生成選項的function
          async function asyncCity(){ 
            const response = await fetch("@Url.Content("~/HWAPI/City")");        
            const datas = await response.json();                
            const opcities = datas.map(value => {
                    const { city } = value;
                    return (`<option value="${city}">${city}</option>`);
                })
                cities.innerHTML=opcities.join("");               
                //console.log(city);                  
          };
          async function asyncSite(){
            const city = cities.options[cities.selectedIndex].value;
            const response = await fetch(`@Url.Content("~/HWAPI/Site?city=${city}")`);
            const datas = await response.json();
            //console.log(datas);
            const opcities = datas.map(value => {
                    const { siteId } = value; //這邊好像要依據資料表的欄位名稱，大小寫有差。
                    return (`<option value="${siteId}">${siteId}</option>`);
                })
                sites.innerHTML=opcities.join("");          
          }          
          async function asyncRoad(){
            const site = sites.options[sites.selectedIndex].value;
            const response = await fetch(`@Url.Content("~/HWAPI/Road?site=${site}")`);        
            const datas = await response.json();    
            const opcities = datas.map(value => {
                    const { road } = value;
                    return (`<option value="${road}">${road}</option>`);
                })
                roads.innerHTML=opcities.join("");
          }
    </script>
}